---
   # Set pre-requisites for Streamsets
   - name: Set ulimit for open files to 63536 for current session
     shell: ulimit -n 63536

   - name: Set hard ulimit for open files to 63536
     vars:
       ulimit: '* hard nofile 63536'
     lineinfile: dest=/etc/security/limits.conf line='{{ulimit}}' state=present

   - name: Set soft ulimit for open files to 63536
     vars:
       ulimit: '* soft nofile 63536'
     lineinfile: dest=/etc/security/limits.conf line='{{ulimit}}' state=present

   - name: Set ulimit in sysctl
     sysctl:
      name: fs.file-max
      value: 63536
      sysctl_set: yes
      state: present
      reload: yes

   # Download Streamsets from local repo (using wget as get_url doesn't support recursive downloads)
   - name: Download Streamsets RPM's from local repo
     shell: wget -r -nc --no-parent -nH --cut-dirs=100 {{ streamsets_repo_url }} -P {{streamsets_download_location}}/streamsets-datacollector-{{streamsets_version}}-el7-all-rpms/
     when: streamsets_repo_url != 'empty'

   # Download Streamsets tarbal
   - name: Download Streamsets (might take some time as it is a 3GB download)
     get_url:
       url: "{{streamsets_download_url}}"
       dest: "{{streamsets_download_location}}/streamsets-datacollector-{{streamsets_version}}-el7-all-rpms.tgz"
       timeout: 900
     when: streamsets_repo_url == 'empty'

   - name: Extract Streamsets
     unarchive: src="{{streamsets_download_location}}/streamsets-datacollector-{{streamsets_version}}-el7-all-rpms.tgz" dest="{{streamsets_download_location}}" copy=no
     when: streamsets_repo_url == 'empty'

   - name: Remove all non-relevant Streamsets origins/destinations
     file: path="{{item}}" state=absent
     with_fileglob:
     - "{{streamsets_download_location}}/streamsets-datacollector-{{streamsets_version}}-el7-all-rpms/streamsets-datacollector-cdh*.rpm"
     - "{{streamsets_download_location}}/streamsets-datacollector-{{streamsets_version}}-el7-all-rpms/streamsets-datacollector-hdp*.rpm"
     #- "{{streamsets_download_location}}/streamsets-datacollector-{{streamsets_version}}-el7-all-rpms/streamsets-datacollector-apache-kafka*.rpm"
     - "{{streamsets_download_location}}/streamsets-datacollector-{{streamsets_version}}-el7-all-rpms/streamsets-datacollector-apache-kudu*.rpm"
     #- "{{streamsets_download_location}}/streamsets-datacollector-{{streamsets_version}}-el7-all-rpms.tgz"

   - name: Install Streamsets Datacollector
     yum:
       name: "{{streamsets_download_location}}/streamsets-datacollector-{{streamsets_version}}-el7-all-rpms/streamsets-datacollector-{{streamsets_version}}-1.noarch.rpm"
       state: present

   - name: Install Streamsets Datacollector origins/destinations - make a list of all RPM's
     find:
       paths: "{{streamsets_download_location}}/streamsets-datacollector-{{streamsets_version}}-el7-all-rpms/"
       patterns: "*.rpm"
     register: rpm_result

   - name: Install Streamsets Datacollector origins/destinations - install all RPM's
     yum:
       name: "{{ item.path }}"
       state: present
     with_items: "{{ rpm_result.files }}"

   # Once installed, configure Streamsets for use with MapR
   - name: Configure Streamsets for use with MapR v{{mapr_version}}
     shell: "streamsets setup-mapr"
     args:
       chdir: /opt/streamsets-datacollector/bin/
     environment:
       SDC_HOME: "/opt/streamsets-datacollector"
       SDC_DIST: "/opt/streamsets-datacollector"
       SDC_CONF: "/etc/sdc"
       MAPR_VERSION: "{{mapr_version}}"
       MAPR_MEP_VERSION: "{{mapr_mep_version[:1]}}"
       MAPR_HOME: "/opt/mapr"
       SDC_ALLOW_UNSUPPORTED_JDK: "true"

   # Configure http proxy if required
   - name: Configure http proxy if required
     vars:
       streamsets_proxy_config: 'export SDC_JAVA_OPTS=" -Dhttp.proxyHost={{proxy_url}} -Dhttp.proxyPort={{proxy_port}} ${SDC_JAVA_OPTS}"'
     lineinfile: path=/opt/streamsets-datacollector/libexec/sdcd-env.sh line='{{ streamsets_proxy_config }}' state=present
     when: proxy == True

   - name: Make user 'sdc' (Streamsets) part of the 'wheel' group
     user:
       name: "sdc"
       groups: wheel
       append: yes

   # Launch Streamsets service sdc
   - name: Start the Streamsets Datacollector service (sdc)
     service:
       name: sdc
       state: restarted
       enabled: yes
       use: service

   - name: Auto launch Streamsets
     lineinfile: path=/etc/rc.d/rc.local line='service sdc start' state=present

   - name: Auto launch Streamsets
     file: path=/etc/rc.d/rc.local mode=755

---
  ## Instal bootcamp cluster fundamentals

  # Example git checkout from Ansible Playbooks
  - name: Clone the github project for all shell scripts
    git:
      repo: "https://github.com/mkieboom/mapr-ansible-playbooks"
      dest: /tmp/

  # Use a cron job to cleanup docker images
  - name: Use a cron job to cleanup docker images
    cron:
      name: "docker container cleanup"
      minute: "*/2"
      job: "docker rm $(docker ps -q -f status=exited) > /tmp/bootcamp-docker-cleanup-cron.log"

  # Set MAPR_SUBNETS
  - name: Set MAPR_SUBNETS
    lineinfile: path=/opt/mapr/conf/env.sh line='export MAPR_SUBNETS={{ansible_default_ipv4.address}}/24' state=present

  - name: Restart NFS
    get_url:
      url: http://s3-eu-west-1.amazonaws.com/mkieboom/mapr-nfs.sh
      dest: "/tmp/"

  - name: Restart NFS
    shell: bash /tmp/mapr-nfs.sh >> /tmp/mapr-nfs.log

  # Download the MapR Data Science Refinery Container
  - name: Download the data-science-refinery container
    docker_image:
      name: maprtech/data-science-refinery
      state: present
      force: yes

  # Download the MapR PACC Image Classification Docker container
  - name: Download the mapr-pacc-image-classification container
    docker_image:
      name: mkieboom/mapr-pacc-image-classification
      state: present
      force: yes

  # Install the Minio Docker container
  - name: Remove the mapr-pacc-minio-docker container if it is already running
    docker_container:
      image: mkieboom/mapr-pacc-minio-docker
      name: mapr-pacc-minio-docker
      restart_policy: always
      state: present
      recreate: yes
      force_kill: yes

  - name: Launch the mapr-pacc-minio-docker container
    docker_container:
      image: mkieboom/mapr-pacc-minio-docker
      name: mapr-pacc-minio-docker
      restart_policy: always
      state: started
      recreate: yes
      force_kill: yes
      env:
        MAPR_CLUSTER={{inventory_hostname}}
        MAPR_CLDB_HOSTS={{ansible_hostname}}
        MAPR_CONTAINER_USER={{mapr_user}}
        MAPR_CONTAINER_GROUP={{mapr_group}}
        MAPR_CONTAINER_UID={{mapr_user_uid}}
        MAPR_CONTAINER_GID={{mapr_group_gid}}
        MAPR_MOUNT_PATH=/mapr
        MINIO_ACCESS_KEY=myminioaccesskey
        MINIO_SECRET_KEY=myminiosecretkey
        MINIO_PATH=/mapr/{{inventory_hostname}}/minio
      devices:
        - "/dev/fuse"
      capabilities:
        - SYS_ADMIN
        - SYS_RESOURCE
      ports:
        - "8080:9000"


  # Install the Portainer Docker container
  - name: Remove the Portainer container if it is already running
    docker_container:
      image: portainer/portainer
      name: portainer
      restart_policy: always
      state: present
      recreate: yes
      force_kill: yes

  - name: Launch the Portainer container
    docker_container:
      image: portainer/portainer
      name: portainer
      restart_policy: always
      state: started
      recreate: yes
      force_kill: yes
      volumes:
        - "/var/run/docker.sock:/var/run/docker.sock"
        - "/portainer:/data"
      ports:
        - "9000:9000"

  # Install the Jumpbox Docker container
  - name: Remove the mapr-bootcamp-jumpbox container if it is already running
    docker_container:
      image: mkieboom/mapr-bootcamp-jumpbox
      name: mapr-bootcamp-jumpbox
      restart_policy: always
      state: present
      recreate: yes
      force_kill: yes

  - name: Launch the mapr-bootcamp-jumpbox container
    docker_container:
      image: mkieboom/mapr-bootcamp-jumpbox
      name: mapr-bootcamp-jumpbox
      restart_policy: always
      state: started
      recreate: yes
      force_kill: yes
      env:
        MAPR_CLUSTER={{inventory_hostname}}
        MAPR_CLDB_HOSTS={{ansible_hostname}}
        MAPR_CONTAINER_USER={{mapr_user}}
        MAPR_CONTAINER_GROUP={{mapr_group}}
        MAPR_CONTAINER_UID={{mapr_user_uid}}
        MAPR_CONTAINER_GID={{mapr_group_gid}}
        MAPR_MOUNT_PATH=/mapr
      capabilities:
        - SYS_ADMIN
        - SYS_RESOURCE
      ports:
        - "80:6901"

  # # Install the Web-Filebrowser (elfinder) Docker container
  # - name: Remove the Web-Filebrowser container if it is already running
  #   docker_container:
  #     image: mkieboom/mapr-pacc-finder-docker
  #     name: mapr-pacc-finder-docker
  #     restart_policy: always
  #     state: present
  #     recreate: yes
  #     force_kill: yes

  # - name: Launch the Web-Filebrowser (mapr-pacc-finder-docker) container
  #   docker_container:
  #     image: mkieboom/mapr-pacc-finder-docker
  #     name: mapr-pacc-finder-docker
  #     restart_policy: always
  #     state: started
  #     recreate: yes
  #     force_kill: yes
  #     env:
  #       MAPR_CLUSTER={{inventory_hostname}}
  #       MAPR_CLDB_HOSTS={{ansible_hostname}}
  #       MAPR_CONTAINER_USER={{mapr_user}}
  #       MAPR_CONTAINER_GROUP={{mapr_group}}
  #       MAPR_CONTAINER_UID={{mapr_user_uid}}
  #       MAPR_CONTAINER_GID={{mapr_group_gid}}
  #       MAPR_MOUNT_PATH=/mapr
  #     devices:
  #       - "/dev/fuse"
  #     capabilities:
  #       - SYS_ADMIN
  #       - SYS_RESOURCE
  #     ports:
  #       - "8080:80"

  # Download the yolo image classification files and store the on MapR-FS
  - name: Download yolo image classification files
    get_url:
      url: "{{item}}"
      dest: "/tmp/"
      timeout: 900
    with_items:
    - "http://s3-eu-west-1.amazonaws.com/mkieboom/bootcamp/yolo/tiny-yolo-voc.cfg"
    - "http://s3-eu-west-1.amazonaws.com/mkieboom/bootcamp/yolo/tiny-yolo-voc.weights"
    - "http://s3-eu-west-1.amazonaws.com/mkieboom/bootcamp/yolo/yolo.cfg"
    - "http://s3-eu-west-1.amazonaws.com/mkieboom/bootcamp/yolo/yolo.weights"

  # Create yolo folder (using hadoop fs as /mapr might not be there)
  - name: Create the /yolo folder on MapR-FS (using hadoop fs as /mapr might not be there)
    shell: hadoop fs -mkdir -p /yolo

  # Upload the files to MapR-FS (using hadoop put as at this point in time /mapr/ might not be available yet)
  - name: Upload the yolo files to MapR-FS
    shell: hadoop fs -put -f {{item}} /yolo/
    with_items:
    - /tmp/tiny-yolo-voc.cfg
    - /tmp/tiny-yolo-voc.weights
    - /tmp/yolo.cfg
    - /tmp/yolo.weights

  # Create /zeppelin/shared-notebooks folder (using hadoop fs as /mapr might not be there)
  - name: Create /zeppelin/shared-notebooks folder (using hadoop fs as /mapr might not be there)
    shell: hadoop fs -mkdir -p /zeppelin/shared-notebooks

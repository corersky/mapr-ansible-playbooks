{
  "pipelineConfig" : {
    "schemaVersion" : 5,
    "version" : 7,
    "pipelineId" : "Bootcamp1MinioS3toMapR7f5d08f8-51df-4880-92a8-2a3185623e51",
    "title" : "Bootcamp - 1 - Minio S3 to MapR",
    "description" : "",
    "uuid" : "9e7d43dd-b4ee-46a7-80c8-909128430ff3",
    "configuration" : [ {
      "name" : "executionMode",
      "value" : "STANDALONE"
    }, {
      "name" : "deliveryGuarantee",
      "value" : "AT_LEAST_ONCE"
    }, {
      "name" : "startEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "stopEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "shouldRetry",
      "value" : true
    }, {
      "name" : "retryAttempts",
      "value" : -1
    }, {
      "name" : "memoryLimit",
      "value" : "${jvm:maxMemoryMB() * 0.85}"
    }, {
      "name" : "memoryLimitExceeded",
      "value" : "LOG"
    }, {
      "name" : "notifyOnStates",
      "value" : [ "RUN_ERROR", "STOPPED", "FINISHED" ]
    }, {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "constants",
      "value" : [ ]
    }, {
      "name" : "badRecordsHandling",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "errorRecordPolicy",
      "value" : "ORIGINAL_RECORD"
    }, {
      "name" : "workerCount",
      "value" : 0
    }, {
      "name" : "clusterSlaveMemory",
      "value" : 2048
    }, {
      "name" : "clusterSlaveJavaOpts",
      "value" : "-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Dlog4j.debug"
    }, {
      "name" : "clusterLauncherEnv",
      "value" : [ ]
    }, {
      "name" : "mesosDispatcherURL",
      "value" : null
    }, {
      "name" : "hdfsS3ConfDir",
      "value" : null
    }, {
      "name" : "rateLimit",
      "value" : 0
    }, {
      "name" : "maxRunners",
      "value" : 0
    }, {
      "name" : "shouldCreateFailureSnapshot",
      "value" : true
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    }, {
      "name" : "sparkConfigs",
      "value" : [ ]
    }, {
      "name" : "statsAggregatorStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_StatsNullDTarget::1"
    } ],
    "uiInfo" : {
      "previewConfig" : {
        "previewSource" : "CONFIGURED_SOURCE",
        "batchSize" : 10,
        "timeout" : 10000,
        "writeToDestinations" : false,
        "executeLifecycleEvents" : false,
        "showHeader" : true,
        "showFieldType" : true,
        "rememberMe" : false
      }
    },
    "stages" : [ {
      "instanceName" : "AmazonS3_01",
      "library" : "streamsets-datacollector-aws-lib",
      "stageName" : "com_streamsets_pipeline_stage_origin_s3_AmazonS3DSource",
      "stageVersion" : "9",
      "configuration" : [ {
        "name" : "s3ConfigBean.basicConfig.maxBatchSize",
        "value" : 1000
      }, {
        "name" : "s3ConfigBean.basicConfig.maxWaitTime",
        "value" : 2000
      }, {
        "name" : "s3ConfigBean.sseConfig.useCustomerSSEKey",
        "value" : false
      }, {
        "name" : "s3ConfigBean.sseConfig.customerKey",
        "value" : null
      }, {
        "name" : "s3ConfigBean.sseConfig.customerKeyMd5",
        "value" : null
      }, {
        "name" : "s3ConfigBean.proxyConfig.connectionTimeout",
        "value" : 10
      }, {
        "name" : "s3ConfigBean.proxyConfig.socketTimeout",
        "value" : 50
      }, {
        "name" : "s3ConfigBean.proxyConfig.retryCount",
        "value" : 3
      }, {
        "name" : "s3ConfigBean.proxyConfig.useProxy",
        "value" : false
      }, {
        "name" : "s3ConfigBean.proxyConfig.proxyHost",
        "value" : null
      }, {
        "name" : "s3ConfigBean.proxyConfig.proxyPort",
        "value" : 0
      }, {
        "name" : "s3ConfigBean.proxyConfig.proxyUser",
        "value" : null
      }, {
        "name" : "s3ConfigBean.proxyConfig.proxyPassword",
        "value" : null
      }, {
        "name" : "s3ConfigBean.dataFormat",
        "value" : "WHOLE_FILE"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.compression",
        "value" : "NONE"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.filePatternInArchive",
        "value" : "*"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.removeCtrlChars",
        "value" : false
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.textMaxLineLen",
        "value" : 1024
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.useCustomDelimiter",
        "value" : false
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.customDelimiter",
        "value" : "\\r\\n"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.includeCustomDelimiterInTheText",
        "value" : false
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.jsonContent",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.jsonMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.csvAllowExtraColumns",
        "value" : false
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.csvExtraColumnPrefix",
        "value" : "_extra_"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.csvMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.csvEnableComments",
        "value" : false
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.csvCommentMarker",
        "value" : "#"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.csvIgnoreEmptyLines",
        "value" : true
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.csvRecordType",
        "value" : "LIST_MAP"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.csvSkipStartLines",
        "value" : 0
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.parseNull",
        "value" : false
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.nullConstant",
        "value" : "\\\\N"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.xmlRecordElement",
        "value" : null
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.includeFieldXpathAttributes",
        "value" : false
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.xPathNamespaceContext",
        "value" : [ ]
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.outputFieldAttributes",
        "value" : false
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.xmlMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.logMode",
        "value" : "COMMON_LOG_FORMAT"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.logMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.retainOriginalLine",
        "value" : false
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.customLogFormat",
        "value" : "%h %l %u %t \"%r\" %>s %b"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.regex",
        "value" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.fieldPathsToGroupName",
        "value" : [ {
          "fieldPath" : "/",
          "group" : 1
        } ]
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.grokPatternDefinition",
        "value" : null
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.grokPattern",
        "value" : "%{COMMONAPACHELOG}"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.onParseError",
        "value" : "ERROR"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.maxStackTraceLines",
        "value" : 50
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.enableLog4jCustomLogFormat",
        "value" : false
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.log4jCustomLogFormat",
        "value" : "%r [%t] %-5p %c %x - %m%n"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.avroSchemaSource",
        "value" : null
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.avroSchema",
        "value" : null
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.schemaRegistryUrls",
        "value" : [ ]
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.schemaLookupMode",
        "value" : "SUBJECT"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.subject",
        "value" : null
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.schemaId",
        "value" : null
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.isDelimited",
        "value" : true
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.binaryMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.datagramMode",
        "value" : "SYSLOG"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.typesDbPath",
        "value" : null
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.convertTime",
        "value" : false
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.excludeInterval",
        "value" : true
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.authFilePath",
        "value" : null
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.netflowOutputValuesMode",
        "value" : "RAW_AND_INTERPRETED"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.maxTemplateCacheSize",
        "value" : -1
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.templateCacheTimeoutMs",
        "value" : -1
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.netflowOutputValuesModeDatagram",
        "value" : "RAW_AND_INTERPRETED"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.maxTemplateCacheSizeDatagram",
        "value" : -1
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.templateCacheTimeoutMsDatagram",
        "value" : -1
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.wholeFileMaxObjectLen",
        "value" : 8192
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.rateLimit",
        "value" : "-1"
      }, {
        "name" : "s3ConfigBean.dataFormatConfig.verifyChecksum",
        "value" : false
      }, {
        "name" : "s3ConfigBean.errorConfig.errorHandlingOption",
        "value" : "NONE"
      }, {
        "name" : "s3ConfigBean.errorConfig.archivingOption",
        "value" : "MOVE_TO_PREFIX"
      }, {
        "name" : "s3ConfigBean.errorConfig.errorPrefix",
        "value" : null
      }, {
        "name" : "s3ConfigBean.errorConfig.errorBucket",
        "value" : null
      }, {
        "name" : "s3ConfigBean.postProcessingConfig.postProcessing",
        "value" : "NONE"
      }, {
        "name" : "s3ConfigBean.postProcessingConfig.archivingOption",
        "value" : "MOVE_TO_BUCKET"
      }, {
        "name" : "s3ConfigBean.postProcessingConfig.postProcessPrefix",
        "value" : null
      }, {
        "name" : "s3ConfigBean.postProcessingConfig.postProcessBucket",
        "value" : null
      }, {
        "name" : "s3ConfigBean.s3FileConfig.prefixPattern",
        "value" : "*"
      }, {
        "name" : "s3ConfigBean.s3FileConfig.objectOrdering",
        "value" : "TIMESTAMP"
      }, {
        "name" : "s3ConfigBean.s3FileConfig.poolSize",
        "value" : 100
      }, {
        "name" : "s3ConfigBean.s3FileConfig.overrunLimit",
        "value" : 128
      }, {
        "name" : "s3ConfigBean.s3Config.bucket",
        "value" : "/images"
      }, {
        "name" : "s3ConfigBean.s3Config.awsConfig.awsAccessKeyId",
        "value" : "myminioaccesskey"
      }, {
        "name" : "s3ConfigBean.s3Config.awsConfig.awsSecretAccessKey",
        "value" : "myminiosecretkey"
      }, {
        "name" : "s3ConfigBean.s3Config.region",
        "value" : "OTHER"
      }, {
        "name" : "s3ConfigBean.s3Config.endpoint",
        "value" : "http://localhost:8080"
      }, {
        "name" : "s3ConfigBean.s3Config.commonPrefix",
        "value" : null
      }, {
        "name" : "s3ConfigBean.s3Config.delimiter",
        "value" : "/"
      }, {
        "name" : "s3ConfigBean.enableMetaData",
        "value" : true
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Minio S3",
        "xPos" : 313.46827697753906,
        "yPos" : 31.36382293701172,
        "stageType" : "SOURCE"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "AmazonS3_01OutputLane15140291649700" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "MapRFS_01",
      "library" : "streamsets-datacollector-mapr_6_0-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_maprfs_MapRFSDTarget",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "hdfsTargetConfigBean.hdfsUri",
        "value" : null
      }, {
        "name" : "hdfsTargetConfigBean.hdfsUser",
        "value" : ""
      }, {
        "name" : "hdfsTargetConfigBean.hdfsKerberos",
        "value" : false
      }, {
        "name" : "hdfsTargetConfigBean.hdfsConfDir",
        "value" : null
      }, {
        "name" : "hdfsTargetConfigBean.hdfsConfigs",
        "value" : [ { } ]
      }, {
        "name" : "hdfsTargetConfigBean.uniquePrefix",
        "value" : ""
      }, {
        "name" : "hdfsTargetConfigBean.fileNameSuffix",
        "value" : null
      }, {
        "name" : "hdfsTargetConfigBean.dirPathTemplateInHeader",
        "value" : false
      }, {
        "name" : "hdfsTargetConfigBean.dirPathTemplate",
        "value" : "/image-classification/input/images"
      }, {
        "name" : "hdfsTargetConfigBean.timeZoneID",
        "value" : "UTC"
      }, {
        "name" : "hdfsTargetConfigBean.timeDriver",
        "value" : "${time:now()}"
      }, {
        "name" : "hdfsTargetConfigBean.maxRecordsPerFile",
        "value" : 0
      }, {
        "name" : "hdfsTargetConfigBean.maxFileSize",
        "value" : 0
      }, {
        "name" : "hdfsTargetConfigBean.idleTimeout",
        "value" : "${1 * HOURS}"
      }, {
        "name" : "hdfsTargetConfigBean.compression",
        "value" : "NONE"
      }, {
        "name" : "hdfsTargetConfigBean.otherCompression",
        "value" : null
      }, {
        "name" : "hdfsTargetConfigBean.fileType",
        "value" : "WHOLE_FILE"
      }, {
        "name" : "hdfsTargetConfigBean.keyEl",
        "value" : "${uuid()}"
      }, {
        "name" : "hdfsTargetConfigBean.seqFileCompressionType",
        "value" : "BLOCK"
      }, {
        "name" : "hdfsTargetConfigBean.lateRecordsLimit",
        "value" : "${1 * HOURS}"
      }, {
        "name" : "hdfsTargetConfigBean.rollIfHeader",
        "value" : false
      }, {
        "name" : "hdfsTargetConfigBean.rollHeaderName",
        "value" : "roll"
      }, {
        "name" : "hdfsTargetConfigBean.lateRecordsAction",
        "value" : "SEND_TO_ERROR"
      }, {
        "name" : "hdfsTargetConfigBean.lateRecordsDirPathTemplate",
        "value" : "/tmp/late/${YYYY()}-${MM()}-${DD()}"
      }, {
        "name" : "hdfsTargetConfigBean.dataFormat",
        "value" : "WHOLE_FILE"
      }, {
        "name" : "hdfsTargetConfigBean.hdfsPermissionCheck",
        "value" : true
      }, {
        "name" : "hdfsTargetConfigBean.permissionEL",
        "value" : null
      }, {
        "name" : "hdfsTargetConfigBean.skipOldTempFileRecovery",
        "value" : false
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.csvReplaceNewLines",
        "value" : true
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.csvReplaceNewLinesString",
        "value" : " "
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.jsonMode",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.textFieldPath",
        "value" : "/text"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.textRecordSeparator",
        "value" : "\\n"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.textFieldMissingAction",
        "value" : "ERROR"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.textEmptyLineIfNull",
        "value" : false
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.avroSchemaSource",
        "value" : null
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.avroSchema",
        "value" : null
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.registerSchema",
        "value" : false
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.schemaRegistryUrlsForRegistration",
        "value" : [ ]
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.schemaRegistryUrls",
        "value" : [ ]
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.schemaLookupMode",
        "value" : "SUBJECT"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.subject",
        "value" : null
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.subjectToRegister",
        "value" : null
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.schemaId",
        "value" : null
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.avroCompression",
        "value" : "NULL"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.binaryFieldPath",
        "value" : "/"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.fileNameEL",
        "value" : "${record:value('/fileInfo/objectKey')}"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.wholeFileExistsAction",
        "value" : "OVERWRITE"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.includeChecksumInTheEvents",
        "value" : false
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.checksumAlgorithm",
        "value" : "MD5"
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.xmlPrettyPrint",
        "value" : true
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.xmlValidateSchema",
        "value" : false
      }, {
        "name" : "hdfsTargetConfigBean.dataGeneratorFormatConfig.xmlSchema",
        "value" : null
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "MapR FS",
        "xPos" : 764.773193359375,
        "yPos" : 31.48379135131836,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ "AmazonS3_01OutputLane15140291649700" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "FieldRemover_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_fieldfilter_FieldFilterDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "filterOperation",
        "value" : "REMOVE"
      }, {
        "name" : "fields",
        "value" : [ "/fileRef" ]
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Field Remover (remove file content)",
        "xPos" : 535.974834735577,
        "yPos" : 152.93561671330377,
        "stageType" : "PROCESSOR"
      },
      "inputLanes" : [ "AmazonS3_01OutputLane15140291649700" ],
      "outputLanes" : [ "FieldRemover_01OutputLane15140359720420" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "MapRDBJSON_01",
      "library" : "streamsets-datacollector-mapr_6_0-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_mapr_MapRJsonDTarget",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "mapRJsonConfigBean.tableName",
        "value" : "/image-classification/input/database/image-input-table"
      }, {
        "name" : "mapRJsonConfigBean.createTable",
        "value" : false
      }, {
        "name" : "mapRJsonConfigBean.keyField",
        "value" : "/fileInfo/filename"
      }, {
        "name" : "mapRJsonConfigBean.isBinaryRowKey",
        "value" : false
      }, {
        "name" : "mapRJsonConfigBean.insertOrReplace",
        "value" : "REPLACE"
      }, {
        "name" : "mapRJsonConfigBean.setOrReplace",
        "value" : "REPLACE"
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "MapR DB JSON",
        "xPos" : 764.9888305664062,
        "yPos" : 277.2370300292969,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ "FieldRemover_01OutputLane15140359720420" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "MapRStreamsProducer_01",
      "library" : "streamsets-datacollector-mapr_6_0-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_maprstreams_MapRStreamsDTarget",
      "stageVersion" : "3",
      "configuration" : [ {
        "name" : "maprStreamsTargetConfigBean.mapRStreamsTargetConfig.runtimeTopicResolution",
        "value" : false
      }, {
        "name" : "maprStreamsTargetConfigBean.mapRStreamsTargetConfig.topicExpression",
        "value" : "${record:value('/topic')}"
      }, {
        "name" : "maprStreamsTargetConfigBean.mapRStreamsTargetConfig.topicWhiteList",
        "value" : "*"
      }, {
        "name" : "maprStreamsTargetConfigBean.mapRStreamsTargetConfig.topic",
        "value" : "/image-classification/input/streams/imageclassification-stream:image-events"
      }, {
        "name" : "maprStreamsTargetConfigBean.mapRStreamsTargetConfig.partitionStrategy",
        "value" : "ROUND_ROBIN"
      }, {
        "name" : "maprStreamsTargetConfigBean.mapRStreamsTargetConfig.partition",
        "value" : "${0}"
      }, {
        "name" : "maprStreamsTargetConfigBean.mapRStreamsTargetConfig.singleMessagePerBatch",
        "value" : false
      }, {
        "name" : "maprStreamsTargetConfigBean.mapRStreamsTargetConfig.kafkaProducerConfigs",
        "value" : [ {
          "key" : "",
          "value" : ""
        } ]
      }, {
        "name" : "maprStreamsTargetConfigBean.dataFormat",
        "value" : "JSON"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.csvReplaceNewLines",
        "value" : true
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.csvReplaceNewLinesString",
        "value" : " "
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.jsonMode",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.textFieldPath",
        "value" : "/text"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.textRecordSeparator",
        "value" : "\\n"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.textFieldMissingAction",
        "value" : "ERROR"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.textEmptyLineIfNull",
        "value" : false
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.avroSchemaSource",
        "value" : null
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.avroSchema",
        "value" : null
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.registerSchema",
        "value" : false
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.schemaRegistryUrlsForRegistration",
        "value" : [ ]
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.schemaRegistryUrls",
        "value" : [ ]
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.schemaLookupMode",
        "value" : "SUBJECT"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.subject",
        "value" : null
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.subjectToRegister",
        "value" : null
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.schemaId",
        "value" : null
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.includeSchema",
        "value" : true
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.avroCompression",
        "value" : "NULL"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.binaryFieldPath",
        "value" : "/"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.fileNameEL",
        "value" : null
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.wholeFileExistsAction",
        "value" : "TO_ERROR"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.includeChecksumInTheEvents",
        "value" : false
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.checksumAlgorithm",
        "value" : "MD5"
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.xmlPrettyPrint",
        "value" : true
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.xmlValidateSchema",
        "value" : false
      }, {
        "name" : "maprStreamsTargetConfigBean.dataGeneratorFormatConfig.xmlSchema",
        "value" : null
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "MapR Streams Producer",
        "xPos" : 765.9069400872268,
        "yPos" : 152.93371082648787,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ "FieldRemover_01OutputLane15140359720420" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "errorStage" : {
      "instanceName" : "Discard_ErrorStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Error Records - Discard",
        "xPos" : 660,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    },
    "info" : {
      "pipelineId" : "Bootcamp1MinioS3toMapR7f5d08f8-51df-4880-92a8-2a3185623e51",
      "title" : "Bootcamp - 1 - Minio S3 to MapR",
      "description" : "",
      "created" : 1516026243050,
      "lastModified" : 1516026603561,
      "creator" : "admin",
      "lastModifier" : "admin",
      "lastRev" : "0",
      "uuid" : "9e7d43dd-b4ee-46a7-80c8-909128430ff3",
      "valid" : true,
      "metadata" : {
        "labels" : [ ]
      },
      "name" : "Bootcamp1MinioS3toMapR7f5d08f8-51df-4880-92a8-2a3185623e51",
      "sdcVersion" : "3.0.0.0",
      "sdcId" : "3b3856d8-f6b9-11e7-9f4b-a17fb88459b4"
    },
    "metadata" : {
      "labels" : [ ]
    },
    "statsAggregatorStage" : {
      "instanceName" : "Discard_StatsAggregatorStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_StatsNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Stats Aggregator - Discard",
        "xPos" : 381,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    },
    "startEventStages" : [ {
      "instanceName" : "Discard_StartEventStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Start Event - Discard",
        "xPos" : 381,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "stopEventStages" : [ {
      "instanceName" : "Discard_StopEventStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Stop Event - Discard",
        "xPos" : 381,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "valid" : true,
    "issues" : {
      "pipelineIssues" : [ ],
      "stageIssues" : { },
      "issueCount" : 0
    },
    "previewable" : true
  },
  "pipelineRules" : {
    "schemaVersion" : 3,
    "version" : 2,
    "metricsRuleDefinitions" : [ {
      "id" : "badRecordsAlertID",
      "alertText" : "High incidence of Error Records",
      "metricId" : "pipeline.batchErrorRecords.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1514029159458,
      "valid" : true
    }, {
      "id" : "stageErrorAlertID",
      "alertText" : "High incidence of Stage Errors",
      "metricId" : "pipeline.batchErrorMessages.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1514029159458,
      "valid" : true
    }, {
      "id" : "idleGaugeID",
      "alertText" : "Pipeline is Idle",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "TIME_OF_LAST_RECEIVED_RECORD",
      "condition" : "${time:now() - value() > 120000}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1514029159458,
      "valid" : true
    }, {
      "id" : "batchTimeAlertID",
      "alertText" : "Batch taking more time to process",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "CURRENT_BATCH_AGE",
      "condition" : "${value() > 200}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1514029159458,
      "valid" : true
    }, {
      "id" : "memoryLimitAlertID",
      "alertText" : "Memory limit for pipeline exceeded",
      "metricId" : "pipeline.memoryConsumed.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > (jvm:maxMemoryMB() * 0.65)}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1514029159458,
      "valid" : true
    } ],
    "dataRuleDefinitions" : [ ],
    "driftRuleDefinitions" : [ ],
    "uuid" : "bd911776-82af-4119-a4a4-37df5d8eabc6",
    "configuration" : [ {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    } ],
    "ruleIssues" : [ ],
    "configIssues" : [ ]
  },
  "libraryDefinitions" : null
}